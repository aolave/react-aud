{"version":3,"sources":["public/ts/apps/node_modules/browser-pack/_prelude.js","public/ts/apps/public/ts/apps/_proyecto_muestreo_base.ts","public/ts/apps/public/ts/apps/proyecto_muestreo_mum.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","MuestreoType","BaseMuestreo","formatNumber","number","decimals","isNaN","accounting","prototype","configurar_wizard","self","this","$","type","on","ev","preventDefault","filter","val","bootbox","alert","hash","tab","find","not","completar_cache_muestras","muestras","_","forEach","item","cache_muestras","cod","calcular_valor_error_en_evaluacion","$tr","html","valor_esperado","valor_real","autoNumeric","valor_diff","valor_diff_p","data","Math","floor","guardar_cambios_muestras","url","url_for","app","vars","ID_MUESTREO","each","k","value","v","real","push","post","noop","guardar_cambios_muestreo","$input","guardar_muestras","params","fields","field","prop","substr","_super","base","MuestreoMum","__extends","gamma_inv","probability","alpha","jStat","gamma","inv","roundup2","rounded_number","round","calcular_factor_confianza","riesgo_esperado","cociente","f1","abs","calcular_tamano_muestra","volumen_poblacion","nivel_confianza","riesgo_aceptacion","error_tolerable_valor","factor_confianza","tamano_muestra","intervalo","generar_tabla_muestra","muestras_actuales","$table","trTemplate","muestreo_config","ficha_tecnica_mum_date","clone","intervalo_1","muestras_e","take","sortBy","muestras_s","volumen_s_1","tamano_muestra_s","intervalo_s","seed_s","random","muestras_s_tmp","shuffle","interval_k","interval_acumulado","union","_m","total","tr","template","appendTo","decimalCharacter","minimumValue","maximumValue","digitGroupSeparator","unformatOnSubmit","calcular_totales_en_evaluacion","$pane","total_real","total_diff","tolerancia_incremental","total_error_proyectado","items_inferiores","removeClass","diff","$parent_row","closest","contaminacion","error_proyectado","error","addClass","reverse","total_error_proyectado_inferiores","factor_incremental","parseInt","total_e","total_diff_p","precision_basica","cota_superior","error_tolerable","Mum","mum","document","ajaxSend","block","message","css","color","ajaxStop","unblock","has","mas","stopPropagation"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,GAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,GAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,KAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,gBCWA,IAAYK,oDAAAA,EAAAL,EAAAK,eAAAL,EAAAK,aAAY,KACtB,IAAA,MACAA,EAAA,IAAA,MAGF,IAAAC,GAiBgBA,EAAAC,aAAd,SAA2BC,EAAgBC,GACzC,YADyC,IAAAA,IAAAA,EAAA,GACrCC,MAAMF,GACD,IAGFG,WAAWJ,aAAaC,EAAQC,IAG/BH,EAAAM,UAAAC,kBAAV,WACE,IAAIC,EAAOC,KACXC,EAAE,SAASD,KAAKE,KAAI,yBAAyBC,GAAG,QAAS,SAASC,GAChEA,EAAGC,iBAMsB,EAJPJ,EAAE,mBAAmBF,EAAKG,KAAI,qCAAqCI,OAAO,WAC1F,MAAwB,IAAjBL,EAAED,MAAMO,QAGDpB,OACdqB,QAAQC,MACN,uGAKGR,EAAED,KAAKU,MAAOC,IAAI,UAG3BV,EAAE,aAAaD,KAAKE,MACjBU,KAAK,wBACLC,IAAI,SAASb,KAAKE,KAAI,yBACtBC,GAAG,QAAS,SAASC,GACpBA,EAAGC,iBACIJ,EAAED,KAAKU,MAAOC,IAAI,WA4B/BpB,EAAAM,UAAAiB,yBAAA,SAAyBC,GACvB,IAAIhB,EAAOC,KACXgB,EAAEC,QAAQF,EAAU,SAASG,QACkB,IAAlCnB,EAAKoB,eAAeD,EAAKE,MAA0D,KAAlCrB,EAAKoB,eAAeD,EAAKE,OACnFrB,EAAKoB,eAAeD,EAAKE,KAAOF,EAAK/C,MAK3CoB,EAAAM,UAAAwB,mCAAA,SAAmCC,GACjCA,EAAIV,KAAK,sCAAsCW,KAAK,IAEpD,IAAMH,EAAcE,EAAIV,KAAK,6BAA6BL,MAE1D,GAAgD,KAA5Ce,EAAIV,KAAK,yBAAyBL,MAAtC,CAMA,IAAMiB,GAA0BF,EAAIV,KAAK,2BAA2BL,MAC9DkB,GAA4BH,EAAIV,KAAK,yBAA0Bc,YAAY,OAEjF,IAAI/B,MAAM8B,GAAV,CAIA,IAAME,EAAqBH,EAAiBC,EACtCG,EAAyC,GAAlBJ,EAAsB,IAAMG,EAAaH,EAAiB,EAEvFF,EAAIV,KAAK,mBAAmBW,KAAKhC,EAAaC,aAAamC,IAAaE,KAAK,QAASF,GACtFL,EAAIV,KAAK,qBAAqBW,KAAUO,KAAKC,MAAMH,GAAgB,KAEnE5B,KAAKmB,eAAeC,GAAOK,QAlBzBzB,KAAKmB,eAAeC,GAAO,KAqB/B7B,EAAAM,UAAAmC,yBAAA,WACE,IAAMC,EAAcC,QAAQ,qBAAqBC,IAAIC,KAAKC,YAAW,WAEjEtB,EAAqB,GAEzBd,EAAE,mBAAmBD,KAAKE,KAAI,wBAAwBoC,KAAK,SAASC,GAClE,IAAInB,EAAcnB,EAAED,MAAMY,KAAK,sBAAsBL,MACjDiC,EAA8BxB,EAAEJ,KAAKuB,IAAIC,KAAKrB,SAAU,CAAEK,IAAKA,IAAQqB,EACvEC,EAAqBzC,EAAED,MAAMY,KAAK,yBAA0Bc,YAAY,OAE5EX,EAAS4B,KAAK,CAAEvB,IAAKA,EAAKqB,EAAGD,EAAOrE,EAAGuE,MAEzCzC,EAAE2C,KAAKX,EAAK,CAAElB,SAAUA,EAAUzC,EAAG0B,KAAKE,MAAQD,EAAE4C,KAAM,SAE9DtD,GA3HE,SAAAA,EAAYW,GAHFF,KAAAmB,eAAsB,GAoDzBnB,KAAA8C,yBAA2B,SAASC,EAAgBC,QAAA,IAAAA,IAAAA,GAAA,GACzD,IAAMjD,EAAOC,KACPiC,EAAcC,QAAQ,qBAAqBC,IAAIC,KAAKC,YAAW,WACjEY,EAAc,GAElB,GAAoB,EAAhBF,EAAO5D,QAET8D,EAAS,CAAEC,OAAQ,GAAI5E,EAAG0B,KAAKE,MAC/B6C,EAAOT,KAAK,WACVW,EAAA,OAAiBN,KAAK,CAAEQ,MAAOlD,EAAED,MAAMoD,KAAK,QAAQC,OAAO,GAAIb,MAAOvC,EAAED,MAAMO,cAE3E,CAAA,GAAqB,GAAjBwC,EAAO5D,QAGhB,OAFA8D,EAAS,CAAEE,MAAOJ,EAAOK,KAAK,QAAQC,OAAO,GAAIb,MAAOO,EAAOxC,MAAOjC,EAAG0B,KAAKE,MAKhFD,EAAE2C,KAAKX,EAAKgB,EAAQ,WACdD,GACFjD,EAAKiC,8BAnEThC,KAAKE,KAAOA,EACZF,KAAKF,oBANab,EAAAM,aAAAA,oZChBtB,IAKA+D,EALAC,EAAA5E,EAAA,6BAKA6E,GAAAF,EAA0BC,EAAKhE,aAALkE,EAAAD,EAAAF,GAgBxBE,EAAA3D,UAAA6D,UAAA,SAAUC,EAAqBC,GAC7B,OAAOC,MAAMC,MAAMC,IAAIJ,EAAaC,EAAO,IAU7CJ,EAAA3D,UAAAmE,SAAA,SAASvE,GACP,IAAIwE,EAAiBnC,KAAKoC,MAAe,IAATzE,GAAgB,IAMhD,OAJIwE,EAAiBxE,IACnBwE,GAAkB,KAGbA,GAGTT,EAAA3D,UAAAsE,0BAAA,SAA0BC,EAAyBC,GACjD,IAAI5F,EAAYuB,KAAK0D,UAAU,EAAIU,EAAiB,GAEpD,GAAgB,GAAZC,GACF,OAAOrE,KAAKgE,SAASvF,GAKvB,IAFA,IAAI6F,EAAa,EACb9F,EAAY,EACU,KAAnBsD,KAAKyC,IAAID,EAAK7F,IAAiBD,GAAK,MACzC8F,EAAK7F,EACLA,EAAIuB,KAAK0D,UAAU,EAAIU,EAAiB,EAAIC,EAAWC,GACvD9F,IAGF,OAAOwB,KAAKgE,SAASvF,IAGvB+E,EAAA3D,UAAA2E,wBAAA,WAGE,IAAMC,EAA4B3C,KAAKyC,IAAItE,EAAE,UAAU4B,KAAK,UACtD6C,GAA2BzE,EAAE,iBAAiBM,MAC9CoE,EAA4B7C,KAAKC,MAAM,IAAM2C,GAEnDzE,EAAE,oBAAoBsB,KAAKoD,EAAoB,KAE/C,IACMC,EAAgCH,GADLxE,EAAE,iBAAiBM,MACwB,IAC5EN,EAAE,aAAasB,KAAKgC,EAAKhE,aAAaC,aAAaoF,IACnD3E,EAAE,cAAcsB,KAAKgC,EAAKhE,aAAaC,aAAaoF,IAAwB/C,KAAK,QAAS+C,GAE1F,IAAMC,EAA2B7E,KAAKgE,SAAShE,KAAK0D,UAAUgB,EAAkB,IAAK,IAErFzE,EAAE,UAAUsB,KAAK,GAAKgC,EAAKhE,aAAaC,aAAaqF,EAAkB,IAAIhD,KAAK,QAASgD,GACzF5E,EAAE,qBAAqBM,IAAIsE,GAE3B,IAAMC,EAAyBhD,KAAKoC,MAAMO,EAAoBI,EAAmBD,GACjF3E,EAAE,UAAUsB,KAAK,GAAKgC,EAAKhE,aAAaC,aAAasF,IACrD7E,EAAE,qBAAqBM,IAAIuE,GAE3B,IAAMC,EAAoBjD,KAAKC,MAAM0C,EAAoBK,GAIzD,OAHA7E,EAAE,UAAUsB,KAAK,GAAKgC,EAAKhE,aAAaC,aAAauF,IAAYlD,KAAK,QAASkD,GAC/E9E,EAAE,qBAAqBM,IAAIwE,GAEpBD,GAGFtB,EAAA3D,UAAAmF,sBAAP,SAA6BC,QAAA,IAAAA,IAAAA,EAAA,IAC3B,IAAMC,EAASjF,EAAE,mBAAmBD,KAAKE,KAAI,eACvCiF,EAAqBlF,EAAE,qCAAqCsB,OAGlE2D,EAAOtE,KAAK,SAASW,KAAK,IAE1B,IAAMuD,EAAyB9E,KAAKwE,0BAEhCzD,EAA+B,GAEnC,QAC6D,IAApDoB,IAAIC,KAAKgD,gBAAgBC,wBAChCJ,EAAkB9F,QAAU2F,EAC5B,CAEA/D,EAAWC,EAAEsE,MAAMnD,IAAIC,KAAKrB,UAAU,GACtCA,EAAWC,EAAEV,OAAOS,EAAU,SAACG,GAAS,OAAA,EAAAA,EAAKuB,IAE7C,IAAM8C,EAAoBzD,KAAKC,MAAM9B,EAAE,UAAU4B,KAAK,UAChD2D,EAAiCxE,EAAEV,OAAOS,EAAU,SAACG,GAAS,OAAAA,EAAKuB,GAAL8C,IAEpE,GAAIC,EAAWrG,OAAS2F,GACtB/D,EAAWC,EAAEyE,KAAKzE,EAAE0E,OAAOF,EAAY,KAAMV,OACxC,CACL,IAAIa,EAAiC3E,EAAEV,OAAOS,EAAU,SAACG,GAAS,OAAAA,EAAKuB,EAAL8C,IAC9DK,EAAY,EAChBD,EAAW1E,QAAQ,SAACC,GAClB0E,GAAa1E,EAAKuB,IAGpB,IAAMoD,EAAmBf,EAAiBU,EAAWrG,OAC/C2G,EAAcF,EAAYC,EAC1BE,EAASjE,KAAKC,MAAMD,KAAKkE,SAAWF,GAAe,EACrDG,EAAiBjF,EAAEkF,QAAQP,GAC/BA,EAAa,GAEb,IAAIQ,EAAa,EACbC,EAAqB,EACzB,IAAK,IAAI7D,KAAK0D,EAAgB,CAC5B,GAAkBJ,GAAdM,GACF,MAMqBJ,EAASI,EAAaL,IAF7CM,IADMlF,EAAO+E,EAAe1D,IACDE,KAIzBkD,EAAWhD,KAAKzB,GAChBiF,KAIJpF,EAAWC,EAAEqF,MAAMb,EAAYG,GAMjC,IAHA5E,EAAWC,EAAE0E,OAAO3E,EAAU,OAGrBwB,EAAI,EAAGA,EAAIxB,EAAS5B,OAAQoD,IAAK,CACxC,IAAI+D,EAAKtF,EAAEJ,KAAKqE,EAAmB,CAAE7D,IAAKL,EAASwB,GAAGnB,MAClDkF,IACFvF,EAASwB,GAAGpE,EAAImI,EAAGnI,SAIvB4C,EAAWC,EAAEsE,MAAML,GAGrB,IAAIsB,EAAgB,EACpB,IAAShE,EAAI,EAAGA,EAAIxB,EAAS5B,OAAQoD,IAAK,CACxC,IAAMrB,GAAAA,EAAyBH,EAASwB,IAE7BpE,GAAK,GAAK+C,EAAK/C,GAAM,KAAO6B,KAAKmB,eAAeD,EAAKE,OAC9DF,EAAK/C,EAAI6B,KAAKmB,eAAeD,EAAKE,MAGpC,IAAMoF,EAAaxF,EAAEyF,SAAStB,EAAXnE,CAAuB,CAAEE,KAAMA,EAAMqB,EAAGA,EAAGrC,KAAMF,KAAKE,OAGnEoB,EAAMrB,EAAEuG,GAAIE,SAASxB,EAAOtE,KAAK,UAEdU,EAAIV,KAAK,yBACtBc,YAAY,OAAQ,CAC9BiF,iBAAkB,IAClBC,cAAe,cACfC,aAAc,cACdC,oBAAqB,IACrBC,kBAAkB,IAGpBR,GAASzE,KAAKC,MAAMb,EAAKuB,GAErBvB,EAAK/C,GACP6B,KAAKqB,mCAAmCC,GAI5CrB,EAAE,YAAYsB,KAAKgC,EAAKhE,aAAaC,aAAa+G,IAAQ1E,KAAK,QAAS0E,GAExEvG,KAAKgH,kCAGPxD,EAAA3D,UAAAmH,+BAAA,WACE,IAAMjH,EAAOC,KACPiH,EAAQhH,EAAE,aAAaD,KAAKE,MAC9BgH,EAAqB,EAEzBjH,EAAE,IAAID,KAAKE,KAAI,iBAAiBqB,KAAK,WAQnC,OAPAtB,EAAE,mBAAmBF,EAAKG,KAAI,eAAeU,KAAK,yBAAyB0B,KAAK,WAC9E,IAAMG,GAAmBxC,EAAED,MAAO0B,YAAY,OACzC/B,MAAM8C,KACTyE,GAAczE,KAIXc,EAAKhE,aAAaC,aAAa0H,KAGxC,IAAIC,EAAqB,EAEnBhC,EAAqBlF,EAAE,0CAA0CsB,OACjEwD,EAAoBjD,KAAKC,MAAM9B,EAAE,UAAU4B,KAAK,UAEhD6C,GAA2BzE,EAAE,iBAAiBM,MAC9CoE,EAA4B7C,KAAKC,MAAM,IAAM2C,GAC7CG,EAAmB7E,KAAKgE,SAAShE,KAAK0D,UAAUgB,EAAkB,IAAK,IAGzE0C,EAAiC,EACjCC,EAAiC,EACjCC,EAAgG,GACpGrH,EAAE,8BAA8BsH,YAAY,UAC5CtH,EAAE,oCAAoCsB,KAAK,IAC3CtB,EAAE,mBAAmBD,KAAKE,KAAI,eAAeU,KAAK,mBAAmB0B,KAAK,WACxE,IAAMkF,GAAgBvH,EAAED,MAAM6B,KAAK,SACnC,IAAKlC,MAAM6H,GAAO,CAGhB,GAFAL,GAAcK,EAEF,GAARA,GACF,OAAO,EAGT,IAAMC,EAAsBxH,EAAED,MAAM0H,QAAQ,MACtCtG,EAAcqG,EAAY7G,KAAK,sBAAsBL,MACrDkC,EAAYgF,EAAY7G,KAAK,oBAAoBL,MACjDpC,EAAkBsJ,EAAY7G,KAAK,yBAA0Bc,YAAY,OAEzEiG,GAAiBlF,EAAItE,GAAKsE,EAC1BmF,EAAuB7C,EAAJtC,EAAgBA,EAAItE,EAAIwJ,EAAgB5C,EAEjEsC,GAA0BO,EAE1B,IAAM1G,EAAO,CAAEE,IAAGA,EAAEqB,EAACA,EAAEtE,EAACA,EAAE0J,MAAOpF,EAAItE,EAAGwJ,cAAaA,EAAE5C,UAASA,EAAE6C,iBAAgBA,GAE9EpB,EAAaxF,EAAEyF,SAAStB,EAAXnE,CAAuBE,GAEpCI,EAAMrB,EAAEuG,GAAIE,SAASzG,EAAE,qCACnB8E,EAAJtC,EACFnB,EAAIwG,SAAS,MAEbR,EAAiB3E,KAAK,CAAEF,EAACA,EAAEtE,EAACA,EAAEwJ,cAAaA,EAAEC,iBAAgBA,OAKnEN,EAAmBtG,EAAE0E,OAAO4B,EAAkB,oBAAoBS,UAClE,IAAIC,EAA4C,EAChD,IAAK,IAAIzF,KAAK+E,EAAkB,CAC9B,IAAIW,EAAqBlI,EAAKiE,SAASjE,EAAK2D,UAAU,EAAIiB,EAAoB,IAAK,EAAIuD,SAAS3F,GAAK,IACrG0F,GAAsBlI,EAAKiE,SAASjE,EAAK2D,UAAU,EAAIiB,EAAoB,IAAK,EAAIuD,SAAS3F,KAC7F0F,EAAqBnG,KAAKoC,MAA2B,IAArB+D,GAA4B,IAE5Db,GAA0BE,EAAiB/E,GAAjB,iBAA0C0F,EACpED,GAAqCV,EAAiB/E,GAAjB,iBAGvC,IAAM4F,GAAmBlI,EAAE,IAAID,KAAKE,KAAI,YAAY2B,KAAK,SACnDuG,EAAkC,GAAXD,EAAe,IAAMhB,EAAagB,EAAU,EAEzElI,EAAE,IAAID,KAAKE,KAAI,wBAAwBqB,KAAUO,KAAKC,MAAMqG,GAAgB,KAE5EnI,EAAE,+BAA+BsB,KAAKgC,EAAKhE,aAAaC,aAAa6H,IACvC,GAA1BA,GACFpH,EAAE,8BAA8B6H,SAAS,UAG3C,IAAMO,EAA2BtD,EAAYF,EAC7C5E,EAAE,yBAAyBsB,KAAKgC,EAAKhE,aAAaC,aAAa6I,IAE/DjB,GAA0BY,EAC1B/H,EAAE,+BAA+BsB,KAAKgC,EAAKhE,aAAaC,aAAa4H,IAErEnH,EAAE,mBAAmBsB,KAAKgC,EAAKhE,aAAaC,aAAa6I,EAAmBjB,IAE5E,IAAMkB,EAAgBD,EAAmBhB,EAAyBD,EAClEnH,EAAE,sBAAsBsB,KAAKgC,EAAKhE,aAAaC,aAAa8I,IAE5D,IAAMC,EAA0BzG,KAAKC,MAAM9B,EAAE,cAAc4B,KAAK,UAEhE5B,EAAE,wBAAwBsB,KAAKgC,EAAKhE,aAAaC,aAAa+I,EAAkBD,IAEhFrB,EAAMrG,KAAK,iBAAiBW,KAAKgC,EAAKhE,aAAaC,aAAa2H,IAEhElH,EAAE,sCAAsCM,IAAI8G,GAC5CpH,EAAE,0BAA0BM,IAAI8H,EAAmBjB,GACnDnH,EAAE,6BAA6BM,IAAI+H,GACnCrI,EAAE,sBAAsBM,IAAIN,EAAE,cAAc4B,KAAK,UAEjD9B,EAAK+C,yBAAyB7C,EAAE,oCAAoC,IAExEuD,GAxSE,SAAAA,WACEF,EAAApE,KAAAc,KAAMuD,EAAKjE,aAAakJ,MAAIxI,KAyShCC,EAAE,WACA,IAAIwI,EAAM,IAAIjF,EAEdvD,EAAEyI,UAAUC,SAAS,WACnB1I,EAAE,qBAAqB6H,SAAS,kBAAkBc,MAAM,CAAEC,QAAS,eAAgBC,IAAK,CAAEC,MAAO,aAGnG9I,EAAEyI,UAAUM,SAAS,WACnB/I,EAAE,qBAAqBsH,YAAY,kBAAkB0B,YAGvDhJ,EAAE,uBAAuBE,GAAG,SAAU,0CAA2C,WAC/EsI,EAAIzD,wBACJyD,EAAI3F,yBAAyB7C,EAAED,SAGjC,IAAIiF,EAAwC,GACxCjE,EAAEkI,IAAI/G,IAAIC,KAAKgD,gBAAiB,kBAClCH,EAAoB9C,IAAIC,KAAKgD,gBAAgBrE,SAAS0H,KAGpDzH,EAAEkI,IAAI/G,IAAIC,KAAKgD,gBAAiB,iBAClCqD,EAAI3H,yBAAyBqB,IAAIC,KAAKgD,gBAAgBrE,SAASoI,KAEjEV,EAAIzD,sBAAsBC,GAE1BhF,EAAE,kCAAkCE,GAAG,SAAU,QAAS,WACxDsI,EAAIpH,mCAAmCpB,EAAED,MAAM0H,QAAQ,OACvDe,EAAIzB,iCACJyB,EAAIzG,6BAGN/B,EAAE,0BAA0BE,GAAG,SAAU,WACvCsI,EAAI3F,yBAAyB7C,EAAED,OAAO,KAGxCC,EAAE,uBAAuBE,GAAG,QAAS,SAASC,GAK5C,GADc,EAFZH,EAAE,wDAAwDK,OAAO,WAC/D,MAAwB,IAAjBL,EAAED,MAAMO,QACdpB,QAQH,OANAiB,EAAGC,iBACHD,EAAGgJ,kBACH5I,QAAQC,MACN,wGAEKR,EAAE,uBAAwBU,IAAI,SAC9B","file":"proyecto_muestreo_mum.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","declare var app: any\r\ndeclare var accounting: any\r\n\r\ndeclare function url_for(url: string): string\r\n\r\nexport interface MuestraItem {\r\n  v: number\r\n  r?: number\r\n  cod: string\r\n}\r\n\r\nexport enum MuestreoType {\r\n  Mas = 'mas',\r\n  Mum = 'mum'\r\n}\r\n\r\nexport abstract class BaseMuestreo {\r\n  protected cache_muestras: any = {}\r\n  protected type: MuestreoType\r\n\r\n  constructor(type: MuestreoType) {\r\n    this.type = type\r\n    this.configurar_wizard()\r\n  }\r\n\r\n  /**\r\n   * Formatea un numero. Si es NaN, se muestra 0.\r\n   *\r\n   * @param number El numero a formatear.\r\n   * @param decimals Cantidad de decimales a mostrar.\r\n   *\r\n   * @returns Numero formateado\r\n   */\r\n  public static formatNumber(number: number, decimals: number = 0): string {\r\n    if (isNaN(number)) {\r\n      return '0'\r\n    }\r\n\r\n    return accounting.formatNumber(number, decimals)\r\n  }\r\n\r\n  protected configurar_wizard() {\r\n    let self = this\r\n    $(`#pane-${this.type}-evaluacion .btn-next`).on('click', function(ev) {\r\n      ev.preventDefault()\r\n\r\n      let emptyFields = $(`#table-muestreo-${self.type}-evaluacion .muestra-v-real input`).filter(function() {\r\n        return $(this).val() == ''\r\n      })\r\n\r\n      if (emptyFields.length > 0) {\r\n        bootbox.alert(\r\n          'Debe ingresar el Valor según Auditoría de <u>TODOS</u> los documentos de la muestra para continuar.'\r\n        )\r\n        return\r\n      }\r\n\r\n      ;(<any>$(this.hash)).tab('show')\r\n    })\r\n\r\n    $(`#mainpane-${this.type}`)\r\n      .find('.btn-next, .btn-back')\r\n      .not(`#pane-${this.type}-evaluacion .btn-next`)\r\n      .on('click', function(ev) {\r\n        ev.preventDefault()\r\n        ;(<any>$(this.hash)).tab('show')\r\n      })\r\n  }\r\n\r\n  public guardar_cambios_muestreo = function($input: JQuery, guardar_muestras: boolean = true): void {\r\n    const self = this\r\n    const url: string = url_for(`proyecto_muestreo/${app.vars.ID_MUESTREO}/config`)\r\n    let params: any = {}\r\n\r\n    if ($input.length > 1) {\r\n      /* Si son varios inputs */\r\n      params = { fields: [], t: this.type }\r\n      $input.each(function() {\r\n        params['fields'].push({ field: $(this).prop('name').substr(7), value: $(this).val() })\r\n      })\r\n    } else if ($input.length == 1) {\r\n      params = { field: $input.prop('name').substr(7), value: $input.val(), t: this.type }\r\n    } else {\r\n      return\r\n    }\r\n\r\n    $.post(url, params, function() {\r\n      if (guardar_muestras) {\r\n        self.guardar_cambios_muestras()\r\n      }\r\n    })\r\n  }\r\n\r\n  completar_cache_muestras(muestras: MuestraItem[]): void {\r\n    let self = this\r\n    _.forEach(muestras, function(item: MuestraItem) {\r\n      if (typeof self.cache_muestras[item.cod] === 'undefined' || self.cache_muestras[item.cod] === '') {\r\n        self.cache_muestras[item.cod] = item.r\r\n      }\r\n    })\r\n  }\r\n\r\n  calcular_valor_error_en_evaluacion($tr: JQuery): void {\r\n    $tr.find('.muestra-v-diff, .muestra-v-diff-p').html('')\r\n\r\n    const cod: string = $tr.find('.muestra-cod input:hidden').val()\r\n\r\n    if ($tr.find('.muestra-v-real input').val() === '') {\r\n      this.cache_muestras[cod] = ''\r\n\r\n      return\r\n    }\r\n\r\n    const valor_esperado: number = +$tr.find('.muestra-v input:hidden').val()\r\n    const valor_real: number = +(<any>$tr.find('.muestra-v-real input')).autoNumeric('get')\r\n\r\n    if (isNaN(valor_real)) {\r\n      return\r\n    }\r\n\r\n    const valor_diff: number = valor_esperado - valor_real\r\n    const valor_diff_p: number = valor_esperado != 0 ? 100 * valor_diff / valor_esperado : 0\r\n\r\n    $tr.find('.muestra-v-diff').html(BaseMuestreo.formatNumber(valor_diff)).data('valor', valor_diff)\r\n    $tr.find('.muestra-v-diff-p').html('' + Math.floor(valor_diff_p) + '%')\r\n\r\n    this.cache_muestras[cod] = valor_real\r\n  }\r\n\r\n  guardar_cambios_muestras(): void {\r\n    const url: string = url_for(`proyecto_muestreo/${app.vars.ID_MUESTREO}/config`)\r\n\r\n    let muestras: object[] = []\r\n\r\n    $(`#table-muestreo-${this.type}-evaluacion tbody tr`).each(function(k) {\r\n      let cod: string = $(this).find('.muestra-cod input').val()\r\n      let value: number = (<MuestraItem>_.find(app.vars.muestras, { cod: cod })).v\r\n      let real: number = (<any>$(this).find('.muestra-v-real input')).autoNumeric('get')\r\n\r\n      muestras.push({ cod: cod, v: value, r: real })\r\n    })\r\n    $.post(url, { muestras: muestras, t: this.type }, $.noop, 'json')\r\n  }\r\n}\r\n","import * as base from './_proyecto_muestreo_base'\r\n\r\ndeclare var app: any\r\ndeclare var jStat: any\r\n\r\nclass MuestreoMum extends base.BaseMuestreo {\r\n  constructor() {\r\n    super(base.MuestreoType.Mum)\r\n  }\r\n\r\n  /**\r\n   * Returns the value of probability in the inverse of the cdf for the Gamma distribution with the parameter alpha and scale = 1.\r\n   *\r\n   * @param {number} probability The probability associated with the gamma distribution.\r\n   * @param {number} alpha A parameter to the distribution.\r\n   *\r\n   * @return {number} The inverse of the gamma cumulative distribution.\r\n   *\r\n   * @see http://jstat.github.io/all.html#jStat.gamma.inv\r\n   * @see https://support.office.com/en-us/article/gamma-inv-function-74991443-c2b0-4be5-aaab-1aa4d71fbb18\r\n   */\r\n  gamma_inv(probability: number, alpha: number): number {\r\n    return jStat.gamma.inv(probability, alpha, 1)\r\n  }\r\n\r\n  /**\r\n   * Redondea con 2 decimales\r\n   *\r\n   * @param {number} number Numero a redondear\r\n   *\r\n   * @returns number\r\n   */\r\n  roundup2(number: number): number {\r\n    let rounded_number = Math.round(number * 100) / 100\r\n\r\n    if (rounded_number < number) {\r\n      rounded_number += 0.01\r\n    }\r\n\r\n    return rounded_number\r\n  }\r\n\r\n  calcular_factor_confianza(riesgo_esperado: number, cociente: number): number {\r\n    let f: number = this.gamma_inv(1 - riesgo_esperado, 1)\r\n\r\n    if (cociente == 0) {\r\n      return this.roundup2(f)\r\n    }\r\n\r\n    let f1: number = 0\r\n    let i: number = 0\r\n    while (Math.abs(f1 - f) > 0.000001 && i <= 1000) {\r\n      f1 = f\r\n      f = this.gamma_inv(1 - riesgo_esperado, 1 + cociente * f1)\r\n      i++\r\n    }\r\n\r\n    return this.roundup2(f)\r\n  }\r\n\r\n  calcular_tamano_muestra(): number {\r\n    //$('#mainpane-mum .cf-1').html('<span class=\"ajax-loader-snake\"></span> ');\r\n\r\n    const volumen_poblacion: number = Math.abs($('#cg2-m').data('valor'))\r\n    const nivel_confianza: number = +$('#cg-z2 select').val()\r\n    const riesgo_aceptacion: number = Math.floor(100 - nivel_confianza)\r\n\r\n    $('#cg-z2--inverted').html(riesgo_aceptacion + '%')\r\n\r\n    const error_tolerable: number = +$('#cg-e2 select').val()\r\n    const error_tolerable_valor: number = volumen_poblacion * error_tolerable / 100\r\n    $('#cg-e2--v').html(base.BaseMuestreo.formatNumber(error_tolerable_valor))\r\n    $('#cg-e2--v2').html(base.BaseMuestreo.formatNumber(error_tolerable_valor)).data('valor', error_tolerable_valor)\r\n\r\n    const factor_confianza: number = this.roundup2(this.gamma_inv(nivel_confianza / 100, 1))\r\n\r\n    $('#cg2-1').html('' + base.BaseMuestreo.formatNumber(factor_confianza, 2)).data('valor', factor_confianza)\r\n    $('#mum-config_cg2_1').val(factor_confianza)\r\n\r\n    const tamano_muestra: number = Math.round(volumen_poblacion * factor_confianza / error_tolerable_valor)\r\n    $('#cg2-3').html('' + base.BaseMuestreo.formatNumber(tamano_muestra))\r\n    $('#mum-config_cg2_3').val(tamano_muestra)\r\n\r\n    const intervalo: number = Math.floor(volumen_poblacion / tamano_muestra)\r\n    $('#cg2-4').html('' + base.BaseMuestreo.formatNumber(intervalo)).data('valor', intervalo)\r\n    $('#mum-config_cg2_4').val(intervalo)\r\n\r\n    return tamano_muestra\r\n  }\r\n\r\n  public generar_tabla_muestra(muestras_actuales: base.MuestraItem[] = []): void {\r\n    const $table = $(`#table-muestreo-${this.type}-evaluacion`)\r\n    const trTemplate: string = $('#muestreo-evaluacion-row-template').html()\r\n\r\n    // Reset table body\r\n    $table.find('tbody').html('')\r\n\r\n    const tamano_muestra: number = this.calcular_tamano_muestra()\r\n\r\n    let muestras: base.MuestraItem[] = []\r\n\r\n    if (\r\n      typeof app.vars.muestreo_config.ficha_tecnica_mum_date === 'undefined' &&\r\n      muestras_actuales.length != tamano_muestra\r\n    ) {\r\n      // Copia de las muestras originales.\r\n      muestras = _.clone(app.vars.muestras, true)\r\n      muestras = _.filter(muestras, (item) => item.v > 0) // Elimina muestras con valores negativos o cero\r\n\r\n      const intervalo: number = Math.floor($('#cg2-4').data('valor'))\r\n      const muestras_e: base.MuestraItem[] = _.filter(muestras, (item) => item.v >= intervalo)\r\n\r\n      if (muestras_e.length > tamano_muestra) {\r\n        muestras = _.take(_.sortBy(muestras_e, 'v'), tamano_muestra)\r\n      } else {\r\n        let muestras_s: base.MuestraItem[] = _.filter(muestras, (item) => item.v < intervalo)\r\n        let volumen_s = 0\r\n        muestras_s.forEach((item) => {\r\n          volumen_s += item.v\r\n        })\r\n\r\n        const tamano_muestra_s = tamano_muestra - muestras_e.length\r\n        const intervalo_s = volumen_s / tamano_muestra_s\r\n        const seed_s = Math.floor(Math.random() * intervalo_s) + 1\r\n        let muestras_s_tmp = _.shuffle(muestras_s)\r\n        muestras_s = []\r\n\r\n        let interval_k = 0\r\n        let interval_acumulado = 0\r\n        for (let k in muestras_s_tmp) {\r\n          if (interval_k >= tamano_muestra_s) {\r\n            break\r\n          }\r\n\r\n          const item = muestras_s_tmp[k]\r\n          interval_acumulado += item.v\r\n\r\n          const acumulado_item = seed_s + interval_k * intervalo_s\r\n          if (interval_acumulado >= acumulado_item) {\r\n            muestras_s.push(item)\r\n            interval_k++\r\n          }\r\n        }\r\n\r\n        muestras = _.union(muestras_e, muestras_s)\r\n      }\r\n\r\n      muestras = _.sortBy(muestras, 'cod') // Las ordeno por codigo\r\n\r\n      // Adicionar valor real ingresado, si existe.\r\n      for (let k = 0; k < muestras.length; k++) {\r\n        let _m = _.find(muestras_actuales, { cod: muestras[k].cod })\r\n        if (_m) {\r\n          muestras[k].r = _m.r\r\n        }\r\n      }\r\n    } else {\r\n      muestras = _.clone(muestras_actuales)\r\n    }\r\n\r\n    let total: number = 0\r\n    for (let k = 0; k < muestras.length; k++) {\r\n      const item: base.MuestraItem = muestras[k]\r\n\r\n      if ((!item.r || '' + item.r === '') && this.cache_muestras[item.cod]) {\r\n        item.r = this.cache_muestras[item.cod]\r\n      }\r\n\r\n      const tr: string = _.template(trTemplate)({ item: item, k: k, type: this.type })\r\n\r\n      // Append tr to tbody\r\n      const $tr = $(tr).appendTo($table.find('tbody'))\r\n\r\n      const $vrealInput: any = $tr.find('.muestra-v-real input')\r\n      $vrealInput.autoNumeric('init', {\r\n        decimalCharacter: ',',\r\n        minimumValue: -9999999999999,\r\n        maximumValue: 9999999999999,\r\n        digitGroupSeparator: '.',\r\n        unformatOnSubmit: true\r\n      })\r\n\r\n      total += Math.floor(item.v)\r\n\r\n      if (item.r) {\r\n        this.calcular_valor_error_en_evaluacion($tr)\r\n      }\r\n    }\r\n\r\n    $('.total-v').html(base.BaseMuestreo.formatNumber(total)).data('valor', total)\r\n\r\n    this.calcular_totales_en_evaluacion()\r\n  }\r\n\r\n  calcular_totales_en_evaluacion(): void {\r\n    const self = this\r\n    const $pane = $(`#mainpane-${this.type}`)\r\n    let total_real: number = 0\r\n\r\n    $(`#${this.type}-total-v-real`).html(function() {\r\n      $(`#table-muestreo-${self.type}-evaluacion`).find('.muestra-v-real input').each(function() {\r\n        const v: number = +(<any>$(this)).autoNumeric('get')\r\n        if (!isNaN(v)) {\r\n          total_real += v\r\n        }\r\n      })\r\n\r\n      return base.BaseMuestreo.formatNumber(total_real)\r\n    })\r\n\r\n    let total_diff: number = 0\r\n\r\n    const trTemplate: string = $('#muestreo-evaluacionerror-row-template').html()\r\n    const intervalo: number = Math.floor($('#cg2-4').data('valor'))\r\n\r\n    const nivel_confianza: number = +$('#cg-z2 select').val()\r\n    const riesgo_aceptacion: number = Math.floor(100 - nivel_confianza)\r\n    const factor_confianza = this.roundup2(this.gamma_inv(nivel_confianza / 100, 1))\r\n\r\n    // ----------- Calcular error proyectado ------------------------\r\n    let tolerancia_incremental: number = 0\r\n    let total_error_proyectado: number = 0\r\n    let items_inferiores: { v: number; r: number; contaminacion: number; error_proyectado: number }[] = []\r\n    $('#table-mum-muestraserradas').removeClass('hidden')\r\n    $('#table-mum-muestraserradas tbody').html('')\r\n    $(`#table-muestreo-${this.type}-evaluacion`).find('.muestra-v-diff').each(function() {\r\n      const diff: number = +$(this).data('valor')\r\n      if (!isNaN(diff)) {\r\n        total_diff += diff\r\n\r\n        if (diff == 0) {\r\n          return true\r\n        }\r\n\r\n        const $parent_row: JQuery = $(this).closest('tr')\r\n        const cod: string = $parent_row.find('.muestra-cod input').val()\r\n        const v: number = $parent_row.find('.muestra-v input').val()\r\n        const r: number = (<any>$parent_row.find('.muestra-v-real input')).autoNumeric('get')\r\n\r\n        const contaminacion = (v - r) / v\r\n        const error_proyectado = v > intervalo ? v - r : contaminacion * intervalo\r\n\r\n        total_error_proyectado += error_proyectado\r\n\r\n        const item = { cod, v, r, error: v - r, contaminacion, intervalo, error_proyectado }\r\n\r\n        let tr: string = _.template(trTemplate)(item)\r\n\r\n        let $tr = $(tr).appendTo($('#table-mum-muestraserradas tbody'))\r\n        if (v > intervalo) {\r\n          $tr.addClass('g2')\r\n        } else {\r\n          items_inferiores.push({ v, r, contaminacion, error_proyectado })\r\n        }\r\n      }\r\n    })\r\n\r\n    items_inferiores = _.sortBy(items_inferiores, 'error_proyectado').reverse()\r\n    let total_error_proyectado_inferiores: number = 0\r\n    for (let k in items_inferiores) {\r\n      let factor_incremental = self.roundup2(self.gamma_inv(1 - riesgo_aceptacion / 100, 1 + parseInt(k) + 1))\r\n      factor_incremental -= self.roundup2(self.gamma_inv(1 - riesgo_aceptacion / 100, 1 + parseInt(k)))\r\n      factor_incremental = Math.round(factor_incremental * 100) / 100\r\n\r\n      tolerancia_incremental += items_inferiores[k]['error_proyectado'] * factor_incremental\r\n      total_error_proyectado_inferiores += items_inferiores[k]['error_proyectado']\r\n    }\r\n\r\n    const total_e: number = +$(`#${this.type}-total-v`).data('valor')\r\n    const total_diff_p: number = total_e != 0 ? 100 * total_diff / total_e : 0\r\n\r\n    $(`#${this.type}-total-v-real-diff-p`).html('' + Math.floor(total_diff_p) + '%')\r\n\r\n    $('.mum-total-error-proyectado').html(base.BaseMuestreo.formatNumber(total_error_proyectado))\r\n    if (total_error_proyectado == 0) {\r\n      $('#table-mum-muestraserradas').addClass('hidden')\r\n    }\r\n\r\n    const precision_basica: number = intervalo * factor_confianza\r\n    $('#mum-precision-basica').html(base.BaseMuestreo.formatNumber(precision_basica))\r\n\r\n    tolerancia_incremental -= total_error_proyectado_inferiores\r\n    $('#mum-tolerancia-incremental').html(base.BaseMuestreo.formatNumber(tolerancia_incremental))\r\n\r\n    $('#mum-tolerancia').html(base.BaseMuestreo.formatNumber(precision_basica + tolerancia_incremental))\r\n\r\n    const cota_superior = precision_basica + total_error_proyectado + tolerancia_incremental\r\n    $('#mum-cota-superior').html(base.BaseMuestreo.formatNumber(cota_superior))\r\n\r\n    const error_tolerable: number = Math.floor($('#cg-e2--v2').data('valor'))\r\n\r\n    $('#mum-conclusion-diff').html(base.BaseMuestreo.formatNumber(error_tolerable - cota_superior))\r\n\r\n    $pane.find('.total-v-diff').html(base.BaseMuestreo.formatNumber(total_diff))\r\n\r\n    $('#mum-config_total_error_proyectado').val(total_error_proyectado)\r\n    $('#mum-config_tolerancia').val(precision_basica + tolerancia_incremental)\r\n    $('#mum-config_cota_superior').val(cota_superior)\r\n    $('#mum-config_e2__v2').val($('#cg-e2--v2').data('valor'))\r\n\r\n    self.guardar_cambios_muestreo($('#mum-hidden_config_values input'), false)\r\n  }\r\n}\r\n\r\n$(function() {\r\n  let mum = new MuestreoMum()\r\n\r\n  $(document).ajaxSend(function() {\r\n    $('#fichatecnicaform').addClass('loadingblocked').block({ message: 'Guardando...', css: { color: 'white' } })\r\n  })\r\n\r\n  $(document).ajaxStop(function() {\r\n    $('#fichatecnicaform').removeClass('loadingblocked').unblock()\r\n  })\r\n\r\n  $('#table-muestreo-mum').on('change', '.col-numeric input, .col-numeric select', function() {\r\n    mum.generar_tabla_muestra()\r\n    mum.guardar_cambios_muestreo($(this))\r\n  })\r\n\r\n  let muestras_actuales: base.MuestraItem[] = []\r\n  if (_.has(app.vars.muestreo_config, 'muestras.mum')) {\r\n    muestras_actuales = app.vars.muestreo_config.muestras.mum\r\n  }\r\n\r\n  if (_.has(app.vars.muestreo_config, 'muestras.mas')) {\r\n    mum.completar_cache_muestras(app.vars.muestreo_config.muestras.mas)\r\n  }\r\n  mum.generar_tabla_muestra(muestras_actuales)\r\n\r\n  $('#table-muestreo-mum-evaluacion').on('change', 'input', function() {\r\n    mum.calcular_valor_error_en_evaluacion($(this).closest('tr'))\r\n    mum.calcular_totales_en_evaluacion()\r\n    mum.guardar_cambios_muestras()\r\n  })\r\n\r\n  $('#mum-conclusion-custom').on('change', function() {\r\n    mum.guardar_cambios_muestreo($(this), false)\r\n  })\r\n\r\n  $('#tab-mum-conclusion').on('click', function(ev) {\r\n    var hasEmpty =\r\n      $('#table-muestreo-mum-evaluacion .muestra-v-real input').filter(function() {\r\n        return $(this).val() == ''\r\n      }).length > 0\r\n    if (hasEmpty) {\r\n      ev.preventDefault()\r\n      ev.stopPropagation()\r\n      bootbox.alert(\r\n        'Debe ingresar el Valor según Auditoría de <u>TODAS</u> las operaciones de la muestra para continuar.'\r\n      )\r\n      ;(<any>$('#tab-mum-evaluacion')).tab('show')\r\n      return false\r\n    }\r\n  })\r\n})\r\n"]}